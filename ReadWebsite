import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.ArrayList;
import java.util.List;
public class ReadWebsite {

    public static void main(String[] args) {
        int lineCount=0;
        int wordCount=0;
        int charCount=0;
        String [] arr= new String[0];
        Int [] arr= new int[0];
        List<String>amount= new ArrayList<
            String>();

        try {
            URL url = new URL("http://www.gutenberg.org/cache/epub/13858/pg13858.txt");
            // read text returned by server
            BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream()));

            String line;
            boolean Words=true;
            String wordPunc= "";
            String punc= "";
            String Cons="";
            String nonCons= "";
            boolean Thing= true;
            while ((line = in.readLine()) != null) {

                if(Words) {
                    //System.out.println(line.toLowerCase());

                    lineCount++;

                    if(line.equals("INTRODUCTION TO PART I."))
                    {
                        Words= true;
                    }

                    arr=line.split(" ");
                    for(String words:arr)
                    {
                        if(word.length() >1 && !Character.isletter(word.charAt(1))){
                            word= word.substring(0, words.length()-1);
                        }
                        for(int i=0; i< words.length(); i++){
                            if( Character.isletter(word.charAt(1))){
                                word = word.substring(0,i) + word.substring(i,1);
                            }

                        }
                        System.out.println();
                        Word w= new Word(word);
                        for(int j=0; j< amt.size(); j++){
                            if ( word.equals(amt.get(j).getWord())){
                                amt.get(j).incrementCount();
                                thing=false;
                            }
                            if(Thing)
                                amt.add(w);
                            System.out.println();
                            if(line.equals("INDEX."))
                            {
                                Words = false;
                            }
                        }
                        for( int k=0; k < amt.size(); k++){

                        }
                    }
                    in.close();
                }
            }
        }catch (MalformedURLException e) {

            System.out.println("Malformed URL: " + e.getMessage());
        }
        catch (IOException e) {
            System.out.println("I/O Error: " + e.getMessage());
        }
}
}


